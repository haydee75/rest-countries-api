{"version":3,"sources":["components/CountryCard/CountryCard.js","components/CountryContainer/CountryContainer.js","components/CountryDetails/CountryDetailsCard.js","components/CountryDetails/CountryDetails.js","components/Header/Header.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["CountryCard","props","countries","length","className","map","country","to","alpha3Code","style","backgroundImage","flag","name","population","region","capital","CountryContainer","useState","getCountries","searchTerm","setSearchTerm","countriesSearchResult","setCountriesSearchResult","loading","setLoading","selectedOption","setSelectedOption","URL","useEffect","axios","get","then","response","allCountries","data","catch","error","console","filter","toLowerCase","includes","class","handleSelectRegions","a","value","searchResults","customStyles","control","cursor","borderRadius","width","height","backgroundColor","bgColorSelect","display","justifyContent","singleValue","color","colorSelect","paddingLeft","indicatorSeparator","placeholder","input","menu","position","marginTop","viewBox","fill","xmlns","id","fillRule","clipRule","d","type","onChange","e","target","styles","options","label","defaultValue","CountryDetailsCard","nativeName","subregion","topLevelDomain","currency","languages","listBorders","CountryDetails","countryId","useParams","getCountryId","getCurrency","getLanguages","borders","getBorders","datas","setDatas","URLOne","requestOne","requestTwo","all","spread","responses","countryDetail","countriesList","currencies","arrLangs","lang","push","join","arrBords","border","res","find","cty","errors","status","bordersLink","bd","version","x","y","points","Header","toggleClass","onClick","toggleAction","toggleName","NotFound","App","isToggled","setToggled","toggleModeClass","toggleModeName","exact","path","component","key","window","location","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mXAqCeA,EAjCK,SAACC,GAAW,IAEpBC,EAAcD,EAAdC,UAER,OAAGA,EAAUC,OAAS,EAEd,yBAASC,UAAU,cAAnB,SACKF,EAAUG,KAAI,SAACC,GACZ,OACI,eAAC,IAAD,CAAMF,UAAU,MAA+BG,GAAE,qBAAgBD,EAAQE,YAAzE,UACI,qBAAKJ,UAAU,QACVK,MAAO,CACJC,gBAAgB,OAAD,OAASJ,EAAQK,KAAjB,QAEvB,sBAAKP,UAAU,UAAf,UACI,6BAAKE,EAAQM,OACb,8CAAgB,+BAAON,EAAQO,gBAC/B,0CAAY,+BAAOP,EAAQQ,YAC3B,2CAAa,+BAAOR,EAAQS,kBATTT,EAAQE,iBAmBvD,yB,iCCmFWQ,EA7GU,SAACf,GAAW,IAAD,EACAgB,mBAAS,IADT,mBAC3Bf,EAD2B,KAChBgB,EADgB,OAEED,mBAAS,IAFX,mBAE3BE,EAF2B,KAEfC,EAFe,OAGwBH,mBAAS,IAHjC,mBAG3BI,EAH2B,KAGJC,EAHI,OAIJL,oBAAS,GAJL,mBAI3BM,EAJ2B,KAIlBC,EAJkB,OAKUP,mBAAS,MALnB,mBAK3BQ,EAL2B,KAKXC,EALW,KAM5BC,EAAM,yFAgCZ,GArBAC,qBAAU,WACRJ,GAAW,GACXK,IACGC,IADH,UACUH,IACPI,MAAK,SAACC,GACL,IAAMC,EAAeD,EAASE,KAE9BhB,EAAae,GACbT,GAAW,MAEZW,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAR,iBAAwBA,SAC3C,IAEHR,qBAAU,WACRN,EACEpB,EAAUoC,QAAO,SAAChC,GAAD,OACfA,EAAQM,KAAK2B,cAAcC,SAASrB,EAAWoB,qBAGlD,CAACpB,EAAYjB,IAEZqB,EACF,OAAO,qBAAKnB,UAAU,mBAAf,SAAkC,sBAAKqC,MAAM,WAAX,UAAsB,wBAAW,wBAAW,wBAAW,6BAGlG,IAAMC,EAAmB,uCAAG,WAAOjB,GAAP,SAAAkB,EAAA,yDAC1BjB,EAAkBD,IACfA,EAAemB,MAFQ,gCAGhBf,IAAMC,IAAN,kDAAqDL,EAAemB,QAC7Eb,MAAK,SAACC,GACH,IAAMa,EAAgBb,EAASE,KAC/BhB,EAAa2B,MACdV,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAR,iBAAwBA,OAPlB,6CAShBP,IAAMC,IAAN,UAAaH,IAClBI,MAAK,SAACC,GACH,IAAMa,EAAgBb,EAASE,KAC/BhB,EAAa2B,MACdV,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAR,iBAAwBA,OAbtB,2CAAH,sDAiBnBU,EAAe,CACnBC,QAAS,iBAAO,CACdC,OAAQ,UACRC,aAAc,MACdC,MAAO,IACPC,OAAQ,GACRC,gBAAiBnD,EAAMoD,cACvBC,QAAS,OACTC,eAAgB,kBAElBC,YAAa,iBAAO,CAClBC,MAAOxD,EAAMyD,YACbC,YAAa,SAEfC,mBAAoB,iBAAO,CACzBN,QAAS,SAEXO,YAAa,iBAAO,CAClBJ,MAAOxD,EAAMyD,cAEfI,MAAO,iBAAO,CACZL,MAAOxD,EAAMyD,cAEfK,KAAM,iBAAO,CACXX,gBAAiBnD,EAAMoD,cACvBI,MAAOxD,EAAMyD,YACbM,SAAU,WACVd,MAAO,IACPe,UAAW,MACXhB,aAAc,SAIlB,OACE,sBAAK7C,UAAU,mBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAK8C,MAAM,KAAKC,OAAO,KAAKe,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SAA+F,mBAAGC,GAAG,SAAN,SAAe,sBAAMA,GAAG,QAAQC,SAAS,UAAUC,SAAS,UAAUC,EAAE,kPAAkPL,KAAK,gBAC9Z,uBACEM,KAAK,OACLZ,YAAY,6BACZa,SAAU,SAACC,GAAD,OAAOvD,EAAcuD,EAAEC,OAAOhC,aAG5C,cAAC,IAAD,CAAQiC,OAAQ/B,EAAc1C,UAAU,YAAYwC,MAAOnB,EAAgBqD,QA/FjE,CACd,CAAElC,MAAO,GAAImC,MAAO,oBACpB,CAAEnC,MAAO,SAAUmC,MAAO,UAC1B,CAAEnC,MAAO,WAAYmC,MAAO,YAC5B,CAAEnC,MAAO,OAAQmC,MAAO,QACxB,CAAEnC,MAAO,UAAWmC,MAAO,WAC3B,CAAEnC,MAAO,SAAUmC,MAAO,WAyFuEC,aAAc,CAAEpC,MAAO,GAAImC,MAAO,oBAAsBL,SAAUhC,OAEjK,cAAC,EAAD,CAAaxC,UAAWmB,QChFf4D,EA7BY,SAAChF,GAExB,OACE,sBAAKG,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAaK,MAAO,CAACC,gBAAgB,OAAD,OAAST,EAAMU,KAAf,QAEnD,sBAAKP,UAAU,iBAAf,UACE,6BAAKH,EAAMW,OACX,sBAAKR,UAAU,SAAf,UACE,gCACE,+CAAiB,+BAAOH,EAAMiF,gBAC9B,8CAAgB,+BAAOjF,EAAMY,gBAC7B,0CAAY,+BAAOZ,EAAMa,YACzB,8CAAgB,+BAAOb,EAAMkF,eAC7B,2CAAa,+BAAOlF,EAAMc,gBAE5B,gCACE,oDAAsB,+BAAOd,EAAMmF,oBACnC,8CAAgB,+BAAOnF,EAAMoF,cAC7B,6CAAe,+BAAOpF,EAAMqF,qBAGhC,sBAAKlF,UAAU,UAAf,UACE,mDADF,IAC6B,8BAAMH,EAAMsF,wB,OC2DtCC,G,MA9EQ,SAACvF,GAAW,IACvBwF,EAAcC,cAAdD,UADsB,EAEExE,mBAAS,IAFX,mBAEvBX,EAFuB,KAEdqF,EAFc,OAGE1E,mBAAS,IAHX,mBAGvBoE,EAHuB,KAGbO,EAHa,OAII3E,mBAAS,IAJb,mBAIvBqE,EAJuB,KAIZO,EAJY,OAKA5E,mBAAS,IALT,mBAKvB6E,EALuB,KAKdC,EALc,OAMA9E,oBAAS,GANT,mBAMvBM,EANuB,KAMdC,EANc,OAOJP,oBAAS,GAPL,mBAOvB+E,EAPuB,KAOhBC,EAPgB,KAS1BC,EAAM,iDAA6CT,GAGjDU,EAAatE,IAAMC,IAAIoE,GACvBE,EAAavE,IAAMC,IAHZ,2DA4Cb,GAvCAF,qBAAU,WACRJ,GAAW,GACXyE,GAAS,GAETpE,IACGwE,IAAI,CAACF,EAAYC,IACjBrE,KACCF,IAAMyE,QAAO,WAAmB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBAC/B,IAAMC,EAAgBD,EAAU,GAAGrE,KAC7BuE,EAAgBF,EAAU,GAAGrE,KAEnCyD,EAAaa,GACbhF,GAAW,GACXyE,GAAS,GACTL,EAAYY,EAAcE,WAAW,GAAG9F,MAExC,IAAI+F,EAAW,GACfH,EAAclB,UAAUjF,KAAI,SAAAuG,GAC1B,OAAOD,EAASE,KAAKD,EAAKhG,SAE5BiF,EAAac,EAASG,KAAK,OAE3B,IAAIC,EAAW,GACfP,EAAcV,QAAQzF,KAAI,SAAA2G,GACxB,IAAIC,EAAMR,EAAcS,MAAK,SAACC,GAAD,OAASA,EAAI3G,aAAewG,KACzD,OAAOD,EAASF,KAAKI,MAEvBlB,EAAWgB,OAGlB5E,OAAM,SAAAiF,GACL/E,QAAQD,MAAMgF,GACiB,MAA3BA,EAAOpF,SAASqF,SAClBpB,GAAS,GACTzE,GAAW,SAGV,IAECD,EACF,OAAO,qBAAKnB,UAAU,mBAAf,SAAkC,sBAAKqC,MAAM,WAAX,UAAsB,wBAAW,wBAAW,wBAAW,6BAGlG,IAAI6E,EAAcxB,EAAQzF,KAAI,SAAAkH,GAC5B,OACE,cAAC,IAAD,CAAMnH,UAAU,SAA6BG,GAAE,qBAAgBgH,EAAG/G,YAAlE,SAAiF+G,EAAG3G,MAAtD2G,EAAG/G,eAIjC+E,EAAiC,IAAnBO,EAAQ3F,OAAR,YAAqCmH,EAEvD,OACE,sBAAKlH,UAAU,mBAAf,UACE,eAAC,IAAD,CAAMA,UAAU,WAAWG,GAAG,aAA9B,UAA2C,+BAAM,qBAAK6D,MAAM,6BAA6BoD,QAAQ,MAAMnD,GAAG,UAAUoD,EAAE,MAAMC,EAAE,MAAMxD,QAAQ,sBAA3F,SACzD,yBAASyD,OAAO,6IADR,UAEE3B,EACF,cAAC,EAAD,CAAoBpF,KAAMN,EAAQM,KAAMwE,eAAgB9E,EAAQ8E,eAAgBzE,KAAML,EAAQK,KAAMuE,WAAY5E,EAAQ4E,WAAYrE,WAAYP,EAAQO,WAAYC,OAAQR,EAAQQ,OAAQqE,UAAW7E,EAAQ6E,UAAWpE,QAAST,EAAQS,QAASsE,SAAUA,EAAUC,UAAWA,EAAWC,YAAaA,IAE3S,cAAC,EAAD,CAAoB3E,KAAK,UAAUD,KAAK,UAAUuE,WAAW,UAAUrE,WAAW,UAAUC,OAAO,UAAUqE,UAAU,UAAUpE,QAAQ,UAAUsE,SAAS,UAAUC,UAAU,UAAUC,YAAY,iBClE/LqC,G,MATA,SAAC3H,GAEd,OACE,mCACI,cAAC,IAAD,CAAMM,GAAG,aAAT,SAAsB,uDACtB,qBAAKH,UAAS,uBAAkBH,EAAM4H,aAAeC,QAAS7H,EAAM8H,aAApE,SAAkF,+BAAO9H,EAAM+H,oBCGxFC,EATE,kBACf,gCACE,kDACA,cAAC,IAAD,CAAM1H,GAAG,aAAT,yBC4BW2H,G,kBAxBH,WAAO,IAAD,EACgBjH,oBAAS,GADzB,mBACTkH,EADS,KACEC,EADF,KAIVC,EAAkBF,EAAY,YAAc,aAC5CG,EAAkBH,EAA0B,aAAd,YAC9B9E,EAAgB8E,EAAY,UAAY,OACxCzE,EAAcyE,EAAY,OAAS,UAEzC,OACE,qBAAK/H,UAAS,cAASiI,GAAvB,SACE,sBAAKjI,UAAU,eAAf,UACE,cAAC,EAAD,CAAQ2H,aAVU,kBAAMK,GAAYD,IAUGN,YAAaQ,EAAiBL,WAAYM,IACjF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,CAAkBnF,cAAeA,EAAeK,YAAaA,MAE/D,cAAC,IAAD,CAAO8E,KAAK,wBAAwBC,UAAW,SAACxI,GAAD,OAAW,wBAAC,EAAD,2BAAoBA,GAApB,IAA2ByI,IAAKC,OAAOC,SAASC,eAC1G,cAAC,IAAD,CAAOJ,UAAWR,cChBba,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjH,MAAK,YAAkD,IAA/CkH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0fefdbed.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CountryCard.scss\";\n\nconst CountryCard = (props) => {\n\n    const { countries } = props;\n\n    if(countries.length > 0 ) {\n        return (\n            <section className=\"CountryCard\">\n                {countries.map((country) => {\n                    return (\n                        <Link className=\"Box\" key={country.alpha3Code} to={`/countries/${country.alpha3Code}`}>\n                            <div className=\"image\"\n                                 style={{\n                                    backgroundImage: `url(${country.flag})`\n                                 }}></div>\n                            <div className=\"content\">\n                                <h2>{country.name}</h2>\n                                <h3>Population: <span>{country.population}</span></h3>\n                                <h3>Region: <span>{country.region}</span></h3>\n                                <h3>Capital: <span>{country.capital}</span></h3>\n                            </div>\n                        </Link>\n                    )\n                })}\n            </section>\n        )     \n    }\n\n  return (\n    <div>\n      \n    </div>\n  );\n};\nexport default CountryCard;\n","import React, { useState, useEffect } from \"react\";\nimport CountryCard from '../CountryCard/CountryCard';\nimport \"./CountryContainer.scss\";\nimport axios from \"axios\";\nimport Select from 'react-select';\n\nconst CountryContainer = (props) => {\n  const [countries, getCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [countriesSearchResult, setCountriesSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const URL = \"https://restcountries.eu/rest/v2?fields=alpha3Code;name;population;region;capital;flag\";\n\n  const options = [\n    { value: '', label: 'Filter By Region' },\n    { value: 'Africa', label: 'Africa' },\n    { value: 'Americas', label: 'Americas' },\n    { value: 'Asia', label: 'Asia' },\n    { value: 'Oceania', label: 'Oceania' },\n    { value: 'Europe', label: 'Europe' }\n  ]\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${URL}`)\n      .then((response) => {\n        const allCountries = response.data;\n\n        getCountries(allCountries);\n        setLoading(false);\n      })\n      .catch((error) => console.error(`Error: ${error}`));\n  }, []);\n\n  useEffect(() => {\n    setCountriesSearchResult(\n      countries.filter((country) =>\n        country.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    );\n  }, [searchTerm, countries]);\n\n  if (loading) {\n    return <div className=\"LoadingContainer\"><div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>;\n  }\n\n  const handleSelectRegions = async (selectedOption) => {\n    setSelectedOption(selectedOption)\n    if(selectedOption.value) {\n        await axios.get(`https://restcountries.eu/rest/v2/region/${selectedOption.value}`)\n    .then((response) => {\n        const searchResults = response.data;\n        getCountries(searchResults);\n    }).catch((error) => console.error(`Error: ${error}`))\n    } else {\n        await axios.get(`${URL}`)\n        .then((response) => {\n            const searchResults = response.data;\n            getCountries(searchResults);\n        }).catch((error) => console.error(`Error: ${error}`))\n    }\n  }\n\n  const customStyles = {\n    control: () => ({\n      cursor: \"pointer\",\n      borderRadius: \"5px\",\n      width: 200,\n      height: 56,\n      backgroundColor: props.bgColorSelect,\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }),\n    singleValue: () => ({\n      color: props.colorSelect,\n      paddingLeft: \"12px\"\n    }),\n    indicatorSeparator: () => ({\n      display: \"none\"\n    }),\n    placeholder: () => ({\n      color: props.colorSelect,\n    }),\n    input: () => ({\n      color: props.colorSelect,\n    }),\n    menu: () => ({\n      backgroundColor: props.bgColorSelect,\n      color: props.colorSelect,\n      position: \"absolute\",\n      width: 200,\n      marginTop: \"4px\",\n      borderRadius: \"5px\",\n    })\n  }\n\n  return (\n    <div className=\"CountryContainer\">\n      <nav className=\"CountryNavigation\">\n        <div className=\"SearchBar\">\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"search\"><path id=\"Shape\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.5 11H11.7L11.4 10.7C12.4 9.6 13 8.1 13 6.5C13 2.9 10.1 0 6.5 0C2.9 0 0 2.9 0 6.5C0 10.1 2.9 13 6.5 13C8.1 13 9.6 12.4 10.7 11.4L11 11.7V12.5L16 17.5L17.5 16L12.5 11ZM6.5 11C4 11 2 9 2 6.5C2 4 4 2 6.5 2C9 2 11 4 11 6.5C11 9 9 11 6.5 11Z\" fill=\"#848484\"></path></g></svg>\n          <input\n            type=\"text\"\n            placeholder=\"Search for a country…\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n        <Select styles={customStyles} className=\"SelectBar\" value={selectedOption} options={options} defaultValue={{ value: '', label: 'Filter By Region' }} onChange={handleSelectRegions}/>\n      </nav>\n      <CountryCard countries={countriesSearchResult} />\n    </div>\n  );\n};\nexport default CountryContainer;\n","import React from \"react\";\n\nconst CountryDetailsCard = (props) => {\n\n    return (\n      <div className=\"Container\">\n          <div className=\"Column Img\" style={{backgroundImage: `url(${props.flag})`}}>\n          </div>\n          <div className=\"Column Content\">\n            <h2>{props.name}</h2>\n            <div className=\"SubCol\">\n              <div>\n                <h4>Native Name: <span>{props.nativeName}</span></h4>\n                <h4>Population: <span>{props.population}</span></h4>\n                <h4>Region: <span>{props.region}</span></h4>\n                <h4>Sub Region: <span>{props.subregion}</span></h4>\n                <h4>Capital: <span>{props.capital}</span></h4>\n              </div>\n              <div>\n                <h4>Top Level Domain: <span>{props.topLevelDomain}</span></h4>\n                <h4>Currencies: <span>{props.currency}</span></h4>\n                <h4>Languages: <span>{props.languages}</span></h4>\n              </div>\n            </div>\n            <div className=\"Borders\">\n              <h4>Border Countries:</h4> <div>{props.listBorders}</div>\n            </div>\n          </div>\n      </div>\n    );\n};\nexport default CountryDetailsCard;","import React, { useState, useEffect } from \"react\";\nimport CountryDetailsCard from \"./CountryDetailsCard\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CountryDetails.scss\";\n\nconst CountryDetails = (props) => {\n    const { countryId } = useParams();\n    const [country, getCountryId] = useState([]);\n    const [currency, getCurrency] = useState([]);\n    const [languages, getLanguages] = useState([]);\n    const [borders, getBorders] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [datas, setDatas] = useState(false);\n\n    let URLOne = `https://restcountries.eu/rest/v2/alpha/${countryId}`;\n    let URLTwo = \"https://restcountries.eu/rest/v2?fields=alpha3Code;name\";\n    \n    const requestOne = axios.get(URLOne);\n    const requestTwo = axios.get(URLTwo);\n\n    useEffect(() => {\n      setLoading(true);\n      setDatas(false)\n      \n      axios\n        .all([requestOne, requestTwo])\n        .then(\n          axios.spread((...responses) => {\n          const countryDetail = responses[0].data;\n          const countriesList = responses[1].data;\n\n          getCountryId(countryDetail);\n          setLoading(false);\n          setDatas(true)\n          getCurrency(countryDetail.currencies[0].name);\n      \n          let arrLangs = [];\n          countryDetail.languages.map(lang => {\n            return arrLangs.push(lang.name)\n          })\n          getLanguages(arrLangs.join(', '))\n\n          let arrBords = [];\n          countryDetail.borders.map(border => {\n            let res = countriesList.find((cty) => cty.alpha3Code === border)\n            return arrBords.push(res)\n          })\n          getBorders(arrBords)\n    })\n  )\n  .catch(errors => {\n    console.error(errors);\n    if (errors.response.status === 400) {\n      setDatas(false)\n      setLoading(false);\n    }\n  });\n    }, []);\n\n    if (loading) {\n      return <div className=\"LoadingContainer\"><div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>;\n    }\n    \n    let bordersLink = borders.map(bd => {\n      return (\n        <Link className=\"Border\" key={bd.alpha3Code} to={`/countries/${bd.alpha3Code}`}>{bd.name}</Link>\n      )\n    })\n\n    let listBorders = borders.length === 0 ? `No Border` : bordersLink\n\n    return (\n      <div className=\"CountryContainer\">\n        <Link className=\"BackLink\" to=\"/countries\"><span><svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 476.213 476.213\">\n<polygon points=\"476.213,223.107 57.427,223.107 151.82,128.713 130.607,107.5 0,238.106 130.607,368.714 151.82,347.5   57.427,253.107 476.213,253.107 \"/></svg></span>Back</Link>\n        { datas ?\n        <CountryDetailsCard name={country.name} topLevelDomain={country.topLevelDomain} flag={country.flag} nativeName={country.nativeName} population={country.population} region={country.region} subregion={country.subregion} capital={country.capital} currency={currency} languages={languages} listBorders={listBorders}/>\n        :\n        <CountryDetailsCard name=\"Unknown\" flag=\"Unknown\" nativeName=\"Unknown\" population=\"Unknown\" region=\"Unknown\" subregion=\"Unknown\" capital=\"Unknown\" currency=\"Unknown\" languages=\"Unknown\" listBorders=\"Unknown\"/>\n        }\n      </div>\n    );\n};\nexport default CountryDetails;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.scss\";\n\nconst Header = (props) => {\n\n  return (\n    <header>\n        <Link to=\"/countries\"><h1>Where in the world?</h1></Link>\n        <div className={`btn-switcher ${props.toggleClass}`} onClick={props.toggleAction}><span>{props.toggleName}</span></div>\n    </header>\n  );\n};\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found!</h1>\n    <Link to=\"/countries\">\n      Go Home\n    </Link>\n  </div>\n);\n\nexport default NotFound;","import React, { useState } from \"react\";\nimport CountryContainer from \"./components/CountryContainer/CountryContainer\";\nimport CountryDetails from \"./components/CountryDetails/CountryDetails\"\nimport Header from \"./components/Header/Header\"\nimport NotFound from './components/NotFound';\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport \"./DarkTheme.scss\";\nimport \"./LightTheme.scss\";\n\nconst App = () => {\n  const [isToggled, setToggled] = useState(false);\n  const toggleTrueFalse = () => setToggled(!isToggled);\n\n  const toggleModeClass = isToggled ? \"DarkTheme\" : \"LightTheme\";\n  const toggleModeName = !isToggled ? \"Dark Mode\" : \"Light Mode\";\n  const bgColorSelect = isToggled ? \"#2b3844\" : \"#fff\";\n  const colorSelect = isToggled ? \"#fff\" : \"#2b3844\";\n\n  return (\n    <div className={`App ${toggleModeClass}`}>\n      <div className=\"page-wrapper\">\n        <Header toggleAction={toggleTrueFalse} toggleClass={toggleModeClass} toggleName={toggleModeName} />\n        <Switch>\n          <Route exact path=\"/countries\">\n            <CountryContainer bgColorSelect={bgColorSelect} colorSelect={colorSelect} />\n          </Route>\n          <Route path=\"/countries/:countryId\" component={(props) => <CountryDetails {...props} key={window.location.pathname}/>}/>\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}